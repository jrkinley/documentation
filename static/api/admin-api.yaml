openapi: 3.0.1
info:
  title: Redpanda Admin API
  description: |
    Use Redpanda Admin APIs to administer and manage Redpanda clusters.
    
  version: 1.0.0
servers:
- url: http://localhost:9644/v1
paths:
  /config:
    get:
      summary: List cluster configurations
      description: List the cluster configuration properties of a cluster.
      operationId: get_config
      responses:
        200:
          description: Configuration
          content: {}
  /node_config:
    get:
      summary: List node configurations
      description: List the node configuration properties of the nodes (brokers) in
        a cluster.
      operationId: get_node_config
      responses:
        200:
          description: Configuration
          content: {}
  /config/log_level/{name}:
    put:
      summary: Set log level
      description: Set the level of logger messages.
      operationId: set_log_level
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: level
        in: query
        description: Log level to set.
        required: true
        schema:
          type: string
          enum:
          - error
          - warn
          - info
          - debug
          - trace
      - name: expires
        in: query
        schema:
          type: number
      responses:
        200:
          description: Log level
          content: {}
  /cluster_config:
    get:
      summary: List cluster configuration
      description: List the cluster configuration properties of a cluster.
      operationId: get_cluster_config
      parameters:
      - name: include_defaults
        in: query
        description: If false, only properties which have been changed from the default
          are included.
        schema:
          type: string
      responses:
        200:
          description: No response was specified
          content: {}
    put:
      summary: Update cluster configuration
      description: Modify cluster configuration properties of a cluster.
      operationId: patch_cluster_config
      parameters:
      - name: force
        in: query
        description: If nonzero, skip validation of properties, and permit setting
          unknown properties
        schema:
          type: string
      - name: dry_run
        in: query
        description: If nonzero, do not apply any changes (but still do validation
          and return 400 on errors)
        schema:
          type: string
      responses:
        200:
          description: No response was specified
          content: {}
  /cluster_config/schema:
    get:
      summary: Get cluster configuration schema
      description: Get the schema describing all cluster configuration properties.
      operationId: get_cluster_config_schema
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: object
  /cluster_config/status:
    get:
      summary: Get cluster configuration status
      description: Get the configuration status of all nodes in a cluster.
      operationId: get_cluster_config_status
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cluster_config_status'
  /raft/{group_id}/transfer_leadership:
    post:
      summary: Transfer Raft group leadership
      description: Transfer leadership of the Raft group (`{group_id}`) to the node
        with `target` ID.
      operationId: raft_transfer_leadership
      parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
      - name: target
        in: query
        schema:
          type: integer
      responses:
        200:
          description: Raft leadership transfer
          content: {}
  /security/users:
    get:
      summary: List users
      description: List users.
      operationId: list_users
      responses:
        200:
          description: List users
          content: {}
    post:
      summary: Create a user
      description: Create a user.
      operationId: create_user
      responses:
        200:
          description: Create user
          content: {}
  /security/users/{user}:
    put:
      summary: Update a user
      description: Update a user.
      operationId: update_user
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Update user
          content: {}
    delete:
      summary: Delete a user
      description: Deleate a user.
      operationId: delete_user
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Delete user
          content: {}
  /status/ready:
    get:
      summary: Get cluster's ready status
      description: Check the health of the Redpanda cluster.
      operationId: ready
      responses:
        200:
          description: Redpanda is up and running
          content: {}
  /features:
    get:
      summary: List available features
      description: List the available Redpanda features. Available features are based
        on the loaded Redpanda license and activated features configuration.
      operationId: get_features
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/features_response'
  /features/license:
    get:
      summary: Get license information
      description: Get currently loaded license information
      operationId: get_license
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/license_response'
    put:
      summary: Upload a new license to redpanda
      operationId: put_license
      responses:
        200:
          description: No response was specified
          content: {}
  /features/{feature_name}:
    put:
      summary: Activate feature
      description: Activate or deactivate a feature.
      operationId: put_feature
      parameters:
      - name: feature_name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: No response was specified
          content: {}
  /brokers:
    get:
      summary: List all brokers
      description: List information about all brokers in the cluster.
      operationId: get_brokers
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/broker'
  /brokers/{id}:
    get:
      summary: List a broker
      description: List information about the specified broker in the cluster.
      operationId: get_broker
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/broker'
  /brokers/{id}/cancel_partition_moves:
    post:
      summary: Cancel partition movement to/from a broker
      description: Cancel all movement of partition replicas to or from the specified
        node.
      operationId: cancel_partition_moves
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
  /brokers/{id}/decommission:
    get:
      summary: Get broker decommission status
      description: Get the status on the decommissioning of the broker with the specified
        `id`.
      operationId: get_decommission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
    put:
      summary: Decommission broker
      description: Decommission the specified broker.
      operationId: decommission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
  /brokers/{id}/maintenance:
    put:
      summary: Enter broker maintenance mode
      description: Request the specified broker to enter maintenance mode.
      operationId: start_broker_maintenance
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
    delete:
      summary: Exit broker maintenance mode
      description: Request the specified broker to exit maintenance mode.
      operationId: stop_broker_maintenance
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
  /brokers/{id}/recommission:
    put:
      summary: Recommission broker
      description: Recommission the specified broker.
      operationId: recommission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: No response was specified
          content: {}
  /cluster_view:
    get:
      summary: Get cluster view
      description: Get a summary view of a cluster and its brokers.
      operationId: get_cluster_view
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cluster_view'
  /maintenance:
    get:
      summary: Get maintenance status
      description: Get status of maintenance.
      operationId: get_local_maintenance
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_status'
    put:
      summary: Start maintenance
      description: Start local maintenance.
      operationId: start_local_maintenance
      responses:
        200:
          description: No response was specified
          content: {}
    delete:
      summary: Stop maintenance
      description: Stop local maintenance.
      operationId: stop_local_maintenance
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions:
    get:
      summary: List partitions
      description: Get a list of all partitions in the cluster.
      operationId: get_partitions
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/partition_summary'
  /partitions/local_summary:
    get:
      summary: Get local partitions
      description: Get a summary of the partition(s) replicated on the requesting
        node.
      operationId: get_partitions_local_summary
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/partitions_local_summary'
  /partitions/rebalance:
    post:
      summary: Rebalance partitions
      description: Trigger an on-demand rebalancing of partitions in the cluster.
      operationId: trigger_partitions_rebalance
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/reconfigurations:
    get:
      summary: List ongoing partition reconfigurations
      description: List ongoing partition reconfigurations.
      operationId: get_partition_reconfigurations
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/{namespace}/{topic}/{partition}:
    get:
      summary: Get detailed partition information
      description: Get detailed information for a partition.
      operationId: get_partition
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/partition'
  /partitions/{namespace}/{topic}/{partition}/cancel_reconfiguration:
    post:
      summary: Cancel partition reconfiguration
      description: Cancel an in-progress reconfiguration of a partition.
      operationId: cancel_partition_reconfiguration
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/{namespace}/{topic}/{partition}/mark_transaction_expired:
    post:
      summary: Mark transaction expired
      description: Mark transaction expired for the specified partition.
      operationId: mark_transaction_expired
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: query
        required: true
        schema:
          type: integer
      - name: epoch
        in: query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/{namespace}/{topic}/{partition}/replicas:
    post:
      summary: Update partition replicas
      description: Set the replica(s) of a partition.
      operationId: set_partition_replicas
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/{namespace}/{topic}/{partition}/transactions:
    get:
      summary: Get partition transactions
      description: Get all transactions for a partition.
      operationId: get_transactions
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
  /partitions/{namespace}/{topic}/{partition}/transfer_leadership:
    post:
      summary: Transfer leadership
      description: Transfer Raft group leadership of a topic to a specified partition.
      operationId: kafka_transfer_leadership
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      - name: target
        in: query
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /partitions/{namespace}/{topic}/{partition}/unclean_abort_reconfiguration:
    post:
      tags:
      - Unstable APIs
      summary: Abort partition reconfiguration
      description: Forcibly abort an in-progress reconfiguration of a partition.
      operationId: unclean_abort_partition_reconfiguration
      parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /transaction/{transactional_id}/delete_partition:
    post:
      summary: Delete partition from transaction
      description: Delete a partition from a transaction.
      operationId: delete_partition
      parameters:
      - name: transactional_id
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        required: true
        schema:
          type: string
      - name: topic
        in: query
        required: true
        schema:
          type: string
      - name: partition_id
        in: query
        required: true
        schema:
          type: integer
      - name: etag
        in: query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: No response was specified
          content: {}
  /transactions:
    get:
      summary: List all transactions
      description: Get a list of all transactions.
      operationId: get_all_transactions
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transaction_summary'
  /cluster/cancel_reconfigurations:
    post:
      summary: Cancel all partition reconfigurations
      description: Cancel all partition reconfigurations.
      operationId: cancel_all_partitions_reconfigurations
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancel_all_partitions_reconfigurations'
  /cluster/health_overview:
    get:
      summary: Get cluster health overview
      description: Get cluster health overview.
      operationId: get_cluster_health_overview
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cluster_health_overview'
  /cluster/partition_balancer/status:
    get:
      summary: Get partition balancer status
      description: Get the status of the partition auto-balancer.
      operationId: get_partition_balancer_status
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_partition_balancer_status'
  /cluster/uuid:
    get:
      summary: Get cluster UUID
      description: Get the UUID of the cluster this node belongs to. (Note, this UUID
        is different than the configurable cluster identifier used in metrics.)
      operationId: get_cluster_uuid
      responses:
        200:
          description: No response was specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_cluster_uuid'
  /debug/self_test/start:
    post:
      summary: Start cluster self-test
      description: Start running the Redpanda cluster self-test.
      operationId: self_test_start
      responses:
        200:
          description: No response was specified
          content: {}
  /debug/self_test/status:
    get:
      summary: Get cluster self-test status
      description: Get the status of the Redpanda cluster self-test.
      operationId: self_test_status
      responses:
        200:
          description: No response was specified
          content: {}
  /debug/self_test/stop:
    post:
      summary: Stop cluster self-test
      description: Stop running the Redpanda cluster self-test.
      operationId: self_test_stop
      responses:
        200:
          description: No response was specified
          content: {}
  /cloud_storage/automated_recovery:
    get:
      summary: Get automated topic recovery status
      description: Query the status of automated topic recovery.
      operationId: query_automated_recovery
      responses:
        200:
          description: No response was specified
          content: {}
    post:
      summary: Start topic scan and recovery
      description: Initiate a topic scan and start topic recovery.
      operationId: initiate_topic_scan_and_recovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Topic scan was initiated successfully
          content: {}
      x-codegen-request-body-name: body
  /cloud_storage/sync_local_state/{topic}/{partition}:
    post:
      summary: Sync local state
      description: Synchronize the content of the bucket with local partition metadata.
      operationId: sync_local_state
      parameters:
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: partition
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Partition metadata is up to date
          content: {}
components:
  schemas:
    cluster_config_property_metadata:
      type: object
      properties:
        description:
          type: string
          description: Human readable description of property's purpose
        enum_values:
          type: array
          description: Possible values of the property (in string-ized form)
          items:
            type: string
        example:
          type: string
          description: Example of correct syntax for this property
        is_secret:
          type: boolean
          description: Whether this property is a secret (i.e. should not be logged)
        items:
          $ref: '#/components/schemas/cluster_config_property_metadata_items'
        needs_restart:
          type: boolean
          description: Whether changes to this property will require a restart of
            redpanda nodes
        nullable:
          type: boolean
          description: Whether this setting may be set to null
        type:
          type: string
          description: Expected syntax of the property value
        units:
          type: string
          description: If applicable, the units of the property (e.g. ms, bytes)
        visibility:
          type: string
          description: One of user|tunable|deprecated
      description: A single configuration property's metadata
    cluster_config_property_metadata_items:
      type: object
      properties:
        type:
          type: string
          description: A scalar type name, like 'string'
      description: The type within 'items' for array properties
    cluster_config_status:
      type: object
      properties:
        config_version:
          type: integer
          description: Configuration version number, for cross referencing with PUT
            results
          format: int64
        invalid:
          type: array
          description: List of properties with invalid values
          items:
            type: string
        node_id:
          type: integer
          description: node id
          format: int64
        restart:
          type: boolean
          description: Restart required to apply pending configuration
        unknown:
          type: array
          description: List of properties unknown to this node
          items:
            type: string
      description: Per-node configuration status
    cluster_config_write_result:
      type: object
      properties:
        config_version:
          type: integer
          description: Configuration version number, for cross referencing with node
            config status
          format: int64
      description: Result of writing changes to cluster configuration
    feature_state:
      type: object
      properties:
        name:
          type: string
        state:
          type: string
          enum:
          - active
          - preparing
          - available
          - unavailable
          - disabled
        was_active:
          type: boolean
          description: Whether the feature has ever been active, i.e. data depending
            on this feature may have been written to disk
      description: State of one feature (active, available etc)
    features_response:
      type: object
      properties:
        cluster_version:
          type: integer
          description: Logical version of cluster
          format: int64
        features:
          type: array
          description: list of feature_state for each feature
          items:
            $ref: '#/components/schemas/feature_state'
        original_cluster_version:
          type: integer
          description: Logical version at time of cluster creation
          format: int64
      description: Describe available features in this redpanda cluster
    license_contents:
      type: object
      properties:
        expires:
          type: integer
          description: Expiration date of the license in Unix epoch seconds
          format: int64
        format_version:
          type: integer
          description: license schema version evolution number
          format: int32
        org:
          type: string
          description: client the license was generated for
        sha256:
          type: string
          description: Checksum (sha256) of the raw license data
        type:
          type: string
          description: type of license, currently only free_trial or enterprise
      description: Parameters belonging to a valid, signed redpanda license
    license_response:
      type: object
      properties:
        license:
          $ref: '#/components/schemas/license_contents'
        loaded:
          type: boolean
          description: true if a non-expired license is loaded
      description: Describe properties of currently loaded license file
    broker:
      type: object
      properties:
        disk_space:
          type: array
          description: Array of disk space information per directory path. If disk
            space information is not available the array may be empty
          items:
            $ref: '#/components/schemas/disk_space_info'
        is_alive:
          type: boolean
          description: is node seen as alive by the cluster
        maintenance_status:
          $ref: '#/components/schemas/maintenance_status'
        membership_status:
          type: string
          description: Broker membership status
        node_id:
          type: integer
          description: node id
          format: int64
        num_cores:
          type: integer
          description: cores
          format: int64
        rack:
          type: string
          description: rack id
        version:
          type: string
          description: Redpanda version
      description: Broker information
    broker_shard:
      type: object
      properties:
        core:
          type: integer
          description: id of a core on a given node
          format: int32
        node_id:
          type: integer
          description: id of a node
          format: int32
      description: Replica placement
    cluster_view:
      type: object
      properties:
        brokers:
          type: array
          items:
            $ref: '#/components/schemas/broker'
        version:
          type: integer
          description: cluster view version
          format: int64
      description: Cluster view
    decommission_status:
      type: object
      properties:
        finished:
          type: boolean
          description: indicate if decommissioning is finished
        partitions:
          type: array
          description: Array of partition reconfiguration statues
          items:
            $ref: '#/components/schemas/partition_reconfiguration_status'
        replicas_left:
          type: integer
          description: number of replicas left on a node
          format: int64
      description: Node decommissioning status
    disk_space_info:
      type: object
      properties:
        free:
          type: integer
          description: free space bytes
          format: int64
        path:
          type: string
          description: data directory path
        total:
          type: integer
          description: total space bytes
          format: int64
    maintenance_status:
      type: object
      properties:
        draining:
          type: boolean
          description: in maintenance state
        eligible:
          type: integer
          description: eligible partition count
          format: int64
        errors:
          type: boolean
          description: drain errors
        failed:
          type: integer
          description: failed transfer partition count
          format: int64
        finished:
          type: boolean
          description: drain finished
        partitions:
          type: integer
          description: partition count
          format: int64
        transferring:
          type: integer
          description: transferring partition count
          format: int64
      description: Drain status
    partition_reconfiguration_status:
      type: object
      properties:
        bytes_left_to_move:
          type: integer
          description: bytes left to move to new replica
          format: int64
        bytes_moved:
          type: integer
          description: bytes moved to target broker
          format: int64
        moving_to:
          $ref: '#/components/schemas/broker_shard'
        ns:
          type: string
          description: namespace
        partition:
          type: integer
          description: partition
          format: int32
        partition_size:
          type: integer
          description: current size of partition
          format: int64
        topic:
          type: string
          description: topic
      description: Partition reconfiguration status
    assignment:
      type: object
      properties:
        core:
          type: integer
          description: core
          format: int64
        node_id:
          type: integer
          description: node id
          format: int64
      description: Replica assignment
    partition:
      type: object
      properties:
        leader_id:
          type: integer
          description: leader node id
          format: int64
        ns:
          type: string
          description: namespace
        partition_id:
          type: integer
          description: partition
          format: int64
        raft_group_id:
          type: integer
          description: partition raft group id
          format: int64
        replicas:
          type: array
          description: Replica assignments
          items:
            $ref: '#/components/schemas/assignment'
        status:
          type: string
          description: status
        topic:
          type: string
          description: topic
      description: Partition details
    partition_result:
      type: object
      properties:
        ns:
          type: string
          description: Namespace
        partition:
          type: integer
          description: Partition id
          format: int64
        result:
          type: string
          description: Status of operation
        topic:
          type: string
          description: Topic
      description: Partition result
    partition_summary:
      type: object
      properties:
        core:
          type: integer
          description: core
          format: int64
        leader:
          type: integer
          description: Latest known leader (or -1 if unknown)
          format: int64
        materialized:
          type: boolean
          description: materialized
        ns:
          type: string
          description: namespace
        partition_id:
          type: integer
          description: partition
          format: int64
        topic:
          type: string
          description: topic
      description: Partition summary
    partitions_local_summary:
      type: object
      properties:
        count:
          type: integer
          description: Number of partitions with a replica on this node
          format: int64
        leaderless:
          type: integer
          description: Number of partitions with a replica on this node that report
            no known raft leader
          format: int64
        under_replicated:
          type: integer
          description: Number of partitions with leadership on this node, reporting
            one or more under-replicated followers
          format: int64
      description: Summarize status of partitions with a replica on this node
    producer_identity:
      type: object
      properties:
        epoch:
          type: integer
          description: Producer epoch
          format: int64
        id:
          type: integer
          description: Producer id
          format: int64
      description: Producer identity
    reconfiguration:
      type: object
      properties:
        ns:
          type: string
          description: Namespace
        partition:
          type: integer
          description: Partition id
          format: int64
        previous_replicas:
          type: array
          description: Previous replica set
          items:
            $ref: '#/components/schemas/assignment'
        status:
          type: string
          description: Reconfiguration status
        topic:
          type: string
          description: Topic
      description: Partition reconfiguration details
    transaction:
      type: object
      properties:
        lso_bound:
          type: integer
          description: First offset
          format: int64
        producer_id:
          $ref: '#/components/schemas/producer_identity'
        staleness_ms:
          type: integer
          description: How long transaction does not make progress
          format: int64
        status:
          type: string
          description: Transaction status
        timeout_ms:
          type: integer
          description: Transaction timeout
          format: int64
      description: Transaction details
    transactions:
      type: object
      properties:
        active_transactions:
          type: array
          description: Active transactions
          items:
            $ref: '#/components/schemas/transaction'
        expired_transactions:
          type: array
          description: Expired transactions
          items:
            $ref: '#/components/schemas/transaction'
      description: Transactions for current partition
    failure_injector_status:
      type: object
      properties:
        enabled:
          type: boolean
        probes:
          type: array
          items:
            $ref: '#/components/schemas/failure_probes'
      description: Status of failure injector with list of available probes
    failure_probes:
      type: object
      properties:
        module:
          type: string
          description: failure probes module name
        points:
          type: array
          description: list of failure points
          items:
            type: string
      description: Group of failure probes related with single resource
    group:
      type: object
      properties:
        etag:
          type: integer
          description: Raft term
          format: int64
        group_id:
          type: string
          description: Group id
      description: Group info
    partition_transaction:
      type: object
      properties:
        etag:
          type: integer
          description: Raft term
          format: int64
        ns:
          type: string
          description: namespace
        partition_id:
          type: integer
          description: partition
          format: int64
        topic:
          type: string
          description: topic
      description: Partition info
    transaction_summary:
      type: object
      properties:
        etag:
          type: integer
          description: Term of a transaction coordinated started a transaction
          format: int64
        groups:
          type: array
          description: Consumer groups for transaction
          items:
            $ref: '#/components/schemas/group'
        partitions:
          type: array
          description: Partitions for transaction
          items:
            $ref: '#/components/schemas/partition_transaction'
        pid:
          $ref: '#/components/schemas/producer_identity'
        staleness_ms:
          type: integer
          description: How long transaction does not make progress
          format: int64
        status:
          type: string
          description: Current status for transaction
        timeout_ms:
          type: integer
          description: Transaction timeout
          format: int64
        transactional_id:
          type: string
          description: Id of an application executing a transaction
        tx_seq:
          type: integer
          description: tx_seq identifies a transactions within a session
          format: int64
      description: Transaction summary
    cluster_health_overview:
      type: object
      properties:
        all_nodes:
          type: array
          description: ids of all nodes registered in the cluster
          items:
            type: integer
            format: int32
        controller_id:
          type: integer
          description: node that is currently a leader or `-1` if leader is not elected
          format: int32
        is_healthy:
          type: boolean
          description: basic cluster health indicator
        leaderless_partitions:
          type: array
          description: list of partitions for which no leader is elected
          items:
            type: string
        nodes_down:
          type: array
          description: ids of all nodes being recognized as down
          items:
            type: integer
            format: int32
        under_replicated_partitions:
          type: array
          description: list of partitions where one or more replicas has not replicated
            all data
          items:
            type: string
      description: Returns simple overview of cluster status
    partition_balancer_status:
      type: object
      properties:
        current_reassignments_count:
          type: integer
          description: current number of partition reassignments in progress
          format: int32
        seconds_since_last_tick:
          type: integer
          description: last time the partition balancer ran
          format: int32
        status:
          type: string
          description: off/ready/in_progress/stalled
        violations:
          $ref: '#/components/schemas/partition_balancer_violations'
      description: Returns status of the partition autobalancer
    partition_balancer_violations:
      type: object
      properties:
        over_disk_limit_nodes:
          type: array
          items:
            type: integer
            format: int32
        unavailable_nodes:
          type: array
          items:
            type: integer
            format: int32
    uuid:
      type: object
      properties:
        cluster_uuid:
          type: string
    controller_status:
      type: object
      properties:
        commited_index:
          type: integer
          description: Commited index for controller consensus
          format: int64
        last_applied_offset:
          type: integer
          description: Last applied offset for controller stm
          format: int64
      description: Controller status
    leader_info:
      type: object
      properties:
        last_stable_leader_term:
          type: integer
          description: last stable leader term
          format: int64
        leader:
          type: integer
          description: current leader
          format: int64
        ns:
          type: string
          description: namespace
        partition_id:
          type: integer
          description: partition
          format: int64
        partition_revision:
          type: integer
          description: partition revision
          format: int64
        previous_leader:
          type: integer
          description: previous leader
          format: int64
        topic:
          type: string
          description: topic
        update_term:
          type: integer
          description: update term
          format: int64
      description: Leader info
    peer_status:
      type: object
      properties:
        since_last_status:
          type: integer
          description: Milliseconds since last update from peer
          format: int64
      description: Peer status
    self_test_node_report:
      type: object
      properties:
        node_id:
          type: integer
          description: node_id of the broker reporting
          format: int64
        results:
          type: array
          description: Recordings of test runs from a single node
          items:
            $ref: '#/components/schemas/self_test_result'
        status:
          type: string
          description: One of either idle / running / unreachable
      description: Current state of self test on a given broker
    self_test_result:
      type: object
      properties:
        info:
          type: string
          description: Additional test labels, metadata and/or information
        bps:
          type: integer
          description: Bytes operated on per second
          format: int64
        duration:
          type: integer
          description: Length of time the test took to complete
          format: int64
        error:
          type: string
          description: Stringified exception if any occurred during test execution
        max_latency:
          type: integer
          description: Maximum recorded latency measurement
          format: int64
        name:
          type: string
          description: Name of the test run
        p50:
          type: integer
          description: 50th percentile latencies
          format: int64
        p90:
          type: integer
          description: 90th percentile latencies
          format: int64
        p99:
          type: integer
          description: 99th percentile latencies
          format: int64
        p999:
          type: integer
          description: 999th percentile latencies
          format: int64
        rps:
          type: integer
          description: Number of requests per second
          format: int64
        test_id:
          type: string
          description: Global test uuid identifier
        test_type:
          type: string
          description: Type of self test, one of either disk/network
        timeouts:
          type: integer
          description: Number of io timeouts observed during run
          format: int64
        warning:
          type: string
          description: Warning that arose during test execution
      description: Result set from a single self_test run
    init_recovery_result:
      type: object
      properties:
        status:
          type: string
          description: current status of recovery process
      description: Result of initiation of recovery process in background
    recovery_request_params:
      type: object
      properties:
        retention_bytes:
          type: integer
          format: int32
        retention_ms:
          type: integer
          format: int32
        topic_names_pattern:
          type: string
    topic_download_counts:
      type: object
      properties:
        failed_downloads:
          type: integer
          format: int32
        pending_downloads:
          type: integer
          format: int32
        successful_downloads:
          type: integer
          format: int32
        topic_namespace:
          type: string
    topic_recovery_status:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/recovery_request_params'
        state:
          type: string
        topic_download_counts:
          type: array
          items:
            $ref: '#/components/schemas/topic_download_counts'
    get_cluster_uuid:
      type: object
      description: TBD
    get_partition_balancer_status:
      type: object
      description: TBD
    cancel_all_partitions_reconfigurations:
      type: object
      description: TBD
